priority -40

snippet pdspec "Peridot / Specification" b
<?php

describe('`!v sniphpets#basename('.spec')`', function () {
	${VISUAL}${0}
});
endsnippet

snippet pddesc "Peridot / Describe" b
describe('${1}', function () {
	${VISUAL}${0}
});
endsnippet

snippet pdcont "Peridot / Context" b
context('${1}', function () {
	${VISUAL}${0}
});
endsnippet

snippet pdit "Peridot / It" b
it('${1}', function () {
	${VISUAL}${0}
});
endsnippet

snippet pdbefore "Peridot / Before each" b
beforeEach(function () {
	${VISUAL}${0}
});
endsnippet

snippet pde "Peridot / Expect" b
expect(${1})->${2};
endsnippet

snippet pdtrue "Peridot / Expect to be true" b
expect(${1})->to->be->true;
endsnippet

snippet pdfalse "Peridot / Expect to be false" b
expect(${1})->to->be->false;
endsnippet

snippet pdbe "Peridot / Expect to be a" b
expect(${1})->to->be->a(${2});
endsnippet

snippet pdinstance "Peridot / Expect to be an instance of" b
expect(${1})->to->be->an->instanceof(${2}::class);
endsnippet

snippet pdequal "Peridot / Expect to equal" b
expect(${1})->to->equal(${2});
endsnippet

snippet pdthrow "Peridot / Expect to throw" b
expect(function () {
	${VISUAL}${0}
})->to->throw(${1:\Exception}::class, ${2});
endsnippet
